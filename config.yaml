uservariables:
  local_profile: profile
  os: operating_system
  skip_fonts_install: skip_fonts_install
  user: user
config:
  import_variables:
    - uservariables.yaml:optional
  backup: false
  create: true
  dotpath: dotfiles
actions:
  pre:
    pyenv_install: command -v pyenv || (./os_pkg_installer.sh {{@@ os @@}} pyenv {{@@ user @@}})
    zoxide_install: command -v z || (./os_pkg_installer.sh {{@@ os @@}} zoxide {{@@ user @@}})
    kubectl_install: command -v kubectl || (./os_pkg_installer.sh {{@@ os @@}} kubectl {{@@ user @@}})
    kubeseal_install: command -v kubeseal || (./os_pkg_installer.sh {{@@ os @@}} kubeseal {{@@ user @@}})
    sdkman_install: command -v sdk || (./os_pkg_installer.sh {{@@ os @@}} sdkman {{@@ user @@}})
    tasks_install: command -v task || (./os_pkg_installer.sh {{@@ os @@}} go-task {{@@ user @@}})
    ripgrep_install: command -v rg || (./os_pkg_installer.sh {{@@ os @@}} ripgrep {{@@ user @@}})
    lazygit_install: command -v lazygit || (./os_pkg_installer.sh {{@@ os @@}} lazygit {{@@ user @@}})
    pynvim_install: pip3 show pynvim || (pip3 install pynvim --user)
    ranger_install: command -v ranger || (./os_pkg_installer.sh {{@@ os @@}} ranger {{@@ user @@}})
    fonts_install: ./os_fonts_installer.sh {{@@ skip_fonts_install @@}} {{@@ os @@} {{@@ user @@})}
    starship_install: command -v starship || (./os_pkg_installer.sh {{@@ os @@}} starship {{@@ user @@}})
    kitty_install: command -v kitty || (./os_pkg_installer.sh {{@@ os @@}} kitty {{@@ user @@}})
    nvm_install:
      test -e $HOME/.config/nvm || (curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh
      | bash)
    antidote_install:
      test -e $HOME/.antidote || (git clone --depth=1 https://github.com/mattmc3/antidote.git
      $HOME/.antidote)
    fzf_install:
      test -e $HOME/.fzf.zsh || (git clone --depth 1 https://github.com/junegunn/fzf.git
      $HOME/.fzf; $HOME/.fzf/install)
    fzf_tab_install:
      test -e $HOME/fzf-tab || (git clone https://github.com/Aloxaf/fzf-tab
      $HOME/fzf-tab)
    rust_install: command -v cargo || (curl https://sh.rustup.rs -sSf | sh)
    zellij_install: command -v zellij || (./os_pkg_installer.sh {{@@ os @@}} zellij {{@@ user @@}})
    nvim_install: command -v nvim || (./os_pkg_installer.sh {{@@ os @@}} neovim {{@@ user @@}})
    kustomize_install:
      command -v kustomize || (./os_pkg_installer.sh {{@@ os @@}}
      kustomize {{@@ user @@}})
    helm_install: command -v helm || (./os_pkg_installer.sh {{@@ os @@}} helm {{@@ user @@}})
dotfiles:
  d_nvim:
    src: config/nvim
    dst: ~/.config/nvim
    actions:
      - ripgrep_install
      - nvim_install
  f_zshrc:
    src: zshrc
    dst: ~/.zshrc
    chmod: "600"
    actions:
      - nvm_install
      - antidote_install
      - fzf_install
      - fzf_tab_install
      - tasks_install
      - sdkman_install
      - kubectl_install
      - kubeseal_install
      - rust_install
      - zoxide_install
      - pyenv_install
  f_starship.toml:
    src: config/starship.toml
    dst: ~/.config/starship.toml
    actions:
      - starship_install
      - fonts_install
  f_zsh_plugins.txt:
    src: zsh_plugins.txt
    dst: ~/.zsh_plugins.txt
    actions:
      - antidote_install
  d_kitty:
    src: config/kitty
    dst: ~/.config/kitty
    actions:
      - kitty_install
      - fonts_install
  d_zellij:
    src: config/zellij
    dst: ~/.config/zellij
    actions:
      - zellij_install
  d_ranger:
    src: config/ranger
    dst: ~/.config/ranger
    actions:
      - ranger_install
      - pynvim_install
    chmod: "744"
  f_lazygit_config.yml:
    src: config/lazygit/config.yml
    dst: ~/.config/lazygit/config.yml
    actions:
      - lazygit_install
  d_zsh-completions:
    src: config/zsh-completions
    dst: ~/.config/zsh-completions
    chmod: "744"
profiles:
  personal:
    dotfiles:
      - d_nvim
      - f_zshrc
      - f_starship.toml
      - f_zsh_plugins.txt
      - d_kitty
      - d_zellij
      - d_ranger
      - f_lazygit_config.yml
      - d_zsh-completions
  ubuntu:
    include:
      - personal
  axon_work_computer:
    include:
      - personal
